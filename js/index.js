const canvas = document.querySelector('canvas')
const context = canvas.getContext('2d')
console.log(context)

canvas.width = 1280
canvas.height = 720

var gravity = 0.5

//--------------------IMAGES-----------------------------
var dirt = new Image();
dirt.src = 'sprite/dirt.png'
var grasstop = new Image();
grasstop.src = 'sprite/grasstop.png'
var brick = new Image();
brick.src = 'sprite/brick.png'
var dirt2 = new Image();
dirt2.src = 'sprite/dirt2.png'
var grasstop2 = new Image();
grasstop2.src = 'sprite/grasstop2.png'
var brick2 = new Image();
brick2.src = 'sprite/brick2.png'
var sandbrick = new Image();
sandbrick.src = 'sprite/sandbrick.png'
var sand = new Image();
sand.src = 'sprite/sand.png'
var sandtop = new Image();
sandtop.src = 'sprite/sandtop.png'

var dogecoin = new Image();
dogecoin.src = 'sprite/dogecoin32.png'
var hearth = new Image();
hearth.src = 'sprite/hearth.png'
var timer = new Image();
timer.src = 'sprite/time.png'
var allscore = new Image();
allscore.src = 'sprite/score.png'
var shibacoin = new Image();
shibacoin.src = 'sprite/shibacoin32.png'
var gpupowerup = new Image();
gpupowerup.src = 'sprite/gpupowerup32.png'

var playerimage = new Image();
playerimage.src = 'sprite/dogeplayerweakR.png'
var playerimageR = new Image();
playerimageR.src = 'sprite/dogeplayerweakR.png'
var playerimageL = new Image();
playerimageL.src = 'sprite/dogeplayerweakL.png'

var vizslainu = new Image();
vizslainu.src = 'sprite/vizslainu.png'
var vizslafarao = new Image();
vizslafarao.src = 'sprite/vizslafarao.png'
var vizslaghost = new Image();
vizslaghost.src = 'sprite/vizslaghost.png'
var trap = new Image();
trap.src = 'sprite/trap.png'
var cactus = new Image();
cactus.src = 'sprite/cactus.png'

var spacebg = new Image();
spacebg.src = 'sprite/space.png'

var playbutton = new Image();
playbutton.src = 'sprite/playbutton.png'

var forestbutton = new Image();
forestbutton.src = 'sprite/forestbutton.png'
var junglebutton = new Image();
junglebutton.src = 'sprite/junglebutton.png'
var desertbutton = new Image();
desertbutton.src = 'sprite/desertbutton.png'
var graveyardbutton = new Image();
graveyardbutton.src = 'sprite/graveyardbutton.png'
var spaceshipbutton = new Image();
spaceshipbutton.src = 'sprite/spaceshipbutton.png'
var spacebutton = new Image();
spacebutton.src = 'sprite/spacebutton.png'
var alllevelbutton = new Image();
alllevelbutton.src = 'sprite/alllevel.png'
var backbutton = new Image();
backbutton.src = 'sprite/backbutton.png'

backgroundSrc = ['sprite/titlescreen2.png', 'sprite/menubackground.png', 'sprite/forest1.png', 'sprite/jungle1.png', 'sprite/desert1.png', 'sprite/graveyard1.png', 'sprite/launchspaceship.png', 'sprite/space.png']
audioSrc = ['audio/titlescreenaudio1.mp3', 'audio/titlescreenaudio1.mp3', 'audio/forestaudio1.mp3', 'audio/jungleaudio1.mp3', 'audio/desertdemo1.mp3', 'audio/ghostvalleydemo1.mp3', 'audio/tothemoonaudio1.mp3', 'audio/lostinspace1.mp3']
var levelname = ['Menu', 'Pályaválasztó', 'Erdő', 'Dzsungel', 'Sivatag', 'Temető', 'Rakétakilővő állomás', 'Űr']

var soundtrack = new Audio(audioSrc[level])
var jumpaudio = new Audio('audio/dogejumpbark.mp3')
var hurtaudio = new Audio('audio/dogehurtbark.mp3')
var dogecoinaudio = new Audio('audio/dogecoin.mp3')
var shibacoinaudio = new Audio('audio/shibacoin.mp3')
var gpupowerupaudio = new Audio('audio/gpupowerup.mp3')
var dogefallingaudio = new Audio('audio/dogefalling.mp3')
var killenemyaudio = new Audio('audio/killenemy.mp3')


var level = 0;
var time = 200;
var attackResistance = 0
let canJump = true;
let attackable = true;
let mutemusic = false;
let alllevelmode = false;
var tiles = []
var world =
    [
        //LEVEL0 MENÜ
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 30, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],

        //LEVEL SELECTOR
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 38, 00, 31, 00, 00, 00, 00, 32, 00, 00, 00, 00, 33, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 34, 00, 00, 00, 00, 35, 00, 00, 00, 00, 36, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 37, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00],

        //LEVEL1 ERDŐ
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,

            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 02, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 10, 10, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 10, 00, 20, 00, 10, 10, 00, 00, 00, 00, 10, 10, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 03, 03, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 03, 03, 03, 00, 00, 03, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 21, 21, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 00, 00, 20, 00, 10, 10, 10, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 01, 01, 00, 00, 00, 00, 10, 10, 10, 00, 03, 03, 01, 01, 01, 00, 00, 01, 03, 03, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 03, 03, 03, 00, 00, 00, 03, 03, 03, 03, 03, 03, 03, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 00, 00, 03, 03, 03, 03, 00, 00, 00, 00, 00, 03, 03, 03, 03, 00, 00, 00, 00, 00, 03, 03, 03, 00, 00, 00, 03, 03, 03, 03, 00, 00, 00, 00, 03, 03, 03, 03, 03, 00, 00, 00, 00, 00, 03, 03, 03, 03, 01, 01, 01, 01, 01, 00, 00, 00, 00, 03, 03, 03, 03, 01, 01, 01, 01, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 03,
            03, 03, 03, 03, 03, 03, 03, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 01, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 00, 00, 00, 00, 03, 01, 01, 01, 01, 03, 00, 00, 00, 00, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 00, 03, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 00, 00, 00, 00, 03, 00, 00, 03, 03, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 01, 01,
            01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 01, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 02, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 02, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 00, 00, 00, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 01, 01, 03, 03, 03, 03, 03, 03, 03, 01, 00, 00, 01, 01, 00, 00, 00, 01, 01, 01, 01, 01, 01, 01, 01, 01],

        //LEVEL2 DZSUNGEL
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,

            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 03, 03, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 00, 02, 02, 00, 00, 10, 10, 10, 00, 00, 00, 00, 03, 03, 03, 03, 03, 03, 03, 03, 01, 01, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 21, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 10, 10, 00, 00, 00, 10, 10, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 03, 01, 01, 01, 01, 01, 01, 01, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 21, 21, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 00, 02, 02, 02, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 00, 00, 00, 00, 03, 03, 03, 03, 03, 03, 00, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 21, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 03, 01, 01, 01, 01, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 03, 00, 00, 03, 03, 00, 00, 00, 00, 03, 03, 03, 03, 03, 00, 00, 03, 03, 03, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 03, 03, 03, 03, 03,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 21, 21, 00, 00, 00, 00, 03, 03, 00, 00, 00, 00, 00, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 00, 02, 02, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 02, 02, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 10, 00, 00, 00, 00, 00, 03, 01, 00, 00, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 01, 01, 01, 00, 00, 00, 00, 00, 00, 03, 01, 01, 01, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 01, 01, 01, 01, 01,
            00, 00, 00, 00, 00, 00, 00, 03, 00, 03, 03, 03, 00, 00, 00, 03, 03, 03, 03, 03, 00, 00, 00, 01, 01, 00, 00, 00, 11, 00, 01, 00, 00, 00, 00, 01, 01, 01, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 01, 01, 00, 00, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 03, 03, 01, 01, 01, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 01, 01, 01, 01, 01,
            03, 03, 03, 03, 03, 00, 00, 01, 00, 00, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 00, 00, 00, 00, 00, 01, 00, 00, 00, 00, 01, 01, 01, 00, 12, 00, 00, 00, 02, 02, 00, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 03, 03, 03, 00, 00, 00, 03, 03, 03, 03, 03, 03, 00, 00, 00, 00, 00, 00, 00, 03, 03, 03, 03, 03, 00, 00, 03, 01, 01, 01, 00, 00, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 11, 00, 00, 00, 03, 03, 01, 01, 01, 01, 01, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 01, 01, 01, 01,
            01, 01, 01, 01, 01, 00, 00, 01, 00, 00, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 00, 00, 00, 01, 01, 03, 00, 00, 03, 03, 01, 00, 00, 00, 00, 01, 01, 01, 02, 02, 02, 00, 00, 02, 02, 00, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 03, 03, 03, 01, 01, 01, 00, 00, 03, 01, 01, 01, 01, 01, 01, 03, 03, 03, 00, 03, 03, 03, 01, 01, 01, 01, 01, 00, 00, 01, 01, 01, 01, 00, 00, 01, 01, 00, 00, 00, 00, 01, 01, 01, 01, 01, 03, 03, 03, 03, 03, 03, 03, 01, 01, 01, 01, 01, 01, 01, 02, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 01, 01, 01, 01],
        //LEVEL3 SIVATAG
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 12, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 00, 00, 06, 06, 06, 06, 00, 00, 00, 00, 06, 00, 00, 00, 06, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 00, 00, 00, 06, 06, 06, 06, 00, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 06, 06, 10, 00, 00, 06, 06, 00, 00, 06, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 06, 11, 06, 06, 00, 00, 00, 06, 06, 06, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 06, 06, 06, 06, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 06, 00, 06, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 22, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 11, 00, 10, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 10, 10, 10, 10, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 06, 06, 06, 06, 06, 06, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 24, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 05, 05, 05, 00, 00, 00, 05, 00, 05, 05, 05, 05, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 10, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 24, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 24, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 10, 24, 10, 00, 00, 00, 00, 00, 10, 00, 10, 06, 06, 06, 06, 06, 06, 06, 06, 10, 00, 10, 00, 00, 00, 00, 00, 00, 10, 00, 00, 10, 00, 00, 00, 00, 00, 22, 00, 00, 00, 00, 00, 00, 24, 00, 00, 00, 10, 00, 10, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 00, 00, 24, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 05, 05, 05, 05, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 00, 04, 04, 04, 04, 00, 00, 00, 05, 05, 05, 05,
            00, 00, 00, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 24, 10, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 22, 00, 00, 00, 00, 00, 00, 00, 06, 06, 06, 06, 06, 06, 06, 06, 06, 06, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 22, 00, 05, 05, 05, 05, 05, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 22, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 22, 00, 00, 05, 00, 00, 00, 05, 00, 00, 00, 00, 00, 05, 05, 05, 00, 00, 04, 04, 04, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 00, 04, 04, 04, 00, 00, 00, 05, 04, 04, 04, 04,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 05, 05, 05, 05, 05, 00, 00, 00, 00, 05, 05, 05, 05, 00, 00, 00, 00, 05, 00, 00, 00, 05, 05, 05, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 05, 05, 05, 05, 05, 00, 00, 00, 00, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 00, 00, 00, 00, 05, 05, 05, 05, 05, 05, 04, 04, 04, 04, 04, 00, 00, 00, 00, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 00, 00, 00, 00, 00, 05, 05, 05, 05, 05, 05, 05, 04, 05, 05, 05, 04, 05, 05, 05, 00, 00, 04, 04, 04, 00, 00, 04, 04, 04, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 00, 00, 11, 00, 00, 00, 05, 04, 04, 04, 04, 04,
            05, 05, 05, 05, 05, 05, 05, 00, 00, 00, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 00, 00, 00, 00, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 05, 05, 05, 00, 00, 00, 00, 05, 05, 00, 00, 00, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 04, 04, 04, 00, 00, 04, 04, 04, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 00, 00, 00, 00, 22, 05, 04, 04, 04, 04, 04, 04,
            04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 00, 00, 00, 00, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 00, 04, 04, 00, 00, 00, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 00, 00, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 00, 04, 04, 04, 00, 00, 04, 04, 04, 04, 00, 00, 00, 04, 04, 04, 00, 00, 00, 04, 05, 05, 05, 05, 05, 04, 04, 04, 04, 04, 04, 04],
        //LEVEL4 GHOST VALLEY    
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,


            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 10, 00, 12, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 23, 00, 10, 00, 10, 00, 00, 00, 00, 00, 00, 11, 00, 10, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 10, 23, 10, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 23, 00, 00, 10, 00, 10, 00, 10, 00, 00, 00, 10, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 10, 00, 00, 00, 10, 00, 23, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 10, 10, 00, 00, 23, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 08, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 08, 00, 09, 09, 00, 00, 09, 09, 09, 11, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 08, 08, 00, 10, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 00, 10, 10, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 08, 08, 00, 00, 09, 09, 09, 00, 00, 00, 00, 00, 09, 09, 00, 00, 00, 08, 08, 00, 00, 00, 00, 07, 00, 00, 00, 00, 08, 00, 00, 00, 08, 00, 00, 00, 07, 09, 00, 00, 09, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 08, 00, 00, 00, 00, 07, 07, 00, 00, 00, 20, 00, 00, 08, 08, 00, 00, 00, 00, 00, 00, 00, 20, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            08, 08, 08, 08, 08, 08, 08, 08, 08, 08, 00, 00, 00, 00, 08, 08, 08, 08, 08, 08, 08, 08, 07, 07, 00, 00, 00, 00, 00, 09, 00, 00, 00, 09, 00, 00, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 00, 00, 00, 00, 07, 00, 00, 00, 07, 00, 00, 00, 07, 09, 00, 00, 09, 00, 00, 09, 00, 00, 00, 00, 08, 08, 08, 08, 08, 08, 08, 00, 00, 00, 00, 08, 08, 08, 00, 00, 00, 00, 00, 08, 08, 00, 00, 00, 00, 08, 08, 07, 00, 00, 00, 00, 07, 07, 08, 08, 08, 08, 08, 08, 07, 07, 00, 00, 00, 08, 08, 08, 08, 08, 08, 08, 08, 08, 08, 00, 00, 00, 08, 08, 00, 00, 00, 00, 08, 08, 00, 00, 00, 08, 08, 08, 08, 08, 08, 08, 08, 08, 00, 00, 00, 08, 08, 08, 08, 08, 08, 08, 08, 08,
            07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 00, 00, 09, 09, 09, 00, 00, 00, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 00, 00, 00, 00, 07, 00, 00, 00, 07, 00, 00, 00, 07, 09, 00, 00, 09, 00, 00, 09, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 00, 00, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07,
            07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 00, 00, 09, 09, 09, 00, 00, 00, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 00, 00, 00, 00, 07, 00, 00, 00, 07, 00, 00, 00, 07, 09, 00, 00, 09, 00, 00, 09, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 00, 00, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 07, 07, 00, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 00, 00, 00, 00, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07],

        //LEVEL 5 
        [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,

            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 09, 09, 09, 00, 00, 10, 00, 00, 00, 00, 10, 00, 10, 00, 00, 00, 00, 00, 10, 00, 00, 00, 10, 00, 00, 00, 00, 10, 00, 00, 00, 10, 00, 00, 00, 00, 00, 10, 00, 23, 00, 00, 11, 00, 00, 00, 00, 10, 00, 00, 23, 00, 10, 00, 00, 00, 00, 10, 00, 00, 23, 00, 10, 00, 10, 00, 10, 00, 10, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 10, 00, 00, 10, 00, 00, 10, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 00, 00, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 21, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 09, 09, 09, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 09, 09, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 09, 00, 00, 00, 00, 09, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 11, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 11, 00, 00, 00, 00, 10, 00, 00, 00, 00, 23, 00, 00, 00, 10, 00, 00, 00, 23, 00, 00, 00, 00, 12, 00, 11, 00, 09, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 21, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 20, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 10, 00, 23, 00, 00, 00, 00, 12, 00, 10, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 10, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00,
            00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 08, 08, 08, 08, 08, 08, 08, 08, 08, 08, 08, 08, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 20, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 21, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 21, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 20, 00, 00, 00, 21, 00, 09, 00, 00, 00, 00, 00, 00, 00,
            02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 08, 08, 08, 00, 08, 08, 08, 08, 08, 00, 00, 08, 08, 08, 08, 08, 00, 00, 08, 08, 08, 08, 00, 00, 00, 08, 08, 08, 00, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 00, 00, 02, 02, 02, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 00, 02, 02, 02, 00, 00, 02, 02, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 09, 09, 09, 09, 09, 09, 09, 09,
            02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 07, 00, 07, 07, 07, 07, 07, 00, 00, 07, 07, 07, 07, 07, 00, 00, 07, 07, 07, 07, 00, 00, 00, 07, 07, 07, 00, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 02, 02, 02, 00, 00, 00, 02, 02, 00, 00, 02, 02, 02, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 02, 02, 00, 00, 00, 00, 02, 02, 02, 00, 00, 02, 02, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 00, 00, 00, 02, 00, 00, 00, 00, 02, 00, 00, 00, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 09, 09, 09, 09, 09, 09, 09, 09],

        //LEVEL 6
        [09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09,
            09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 12, 10, 00, 00, 00, 00, 00, 10, 10, 10, 11, 10, 10, 00, 00, 00, 00, 00, 00, 00, 10, 10, 11, 10, 00, 00, 23, 23, 00, 00, 11, 10, 00, 00, 00, 00, 23, 00, 00, 00, 00, 10, 10, 11, 10, 10, 00, 00, 00, 23, 00, 00, 00, 23, 00, 00, 00, 10, 10, 10, 12, 10, 10, 10, 00, 00, 00, 00, 10, 10, 00, 00, 10, 00, 10, 10, 10, 10, 11, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 10, 11, 10, 00, 00, 09, 00, 10, 10, 10, 00, 09, 00, 00, 10, 10, 10, 10, 10, 00, 10, 00, 00, 11, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 10, 00, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 10, 10, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 23, 00, 00, 00, 00, 10, 10, 10, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 10, 10, 10, 10, 10, 10, 10, 10, 23, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 09, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 00, 00, 00, 00, 00, 20, 00, 00, 00, 00, 10, 00, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 10, 10, 00, 23, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 23, 00, 00, 00, 00, 10, 10, 10, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 10, 10, 10, 10, 10, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 09, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 10, 00, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 23, 00, 00, 00, 23, 00, 10, 10, 00, 23, 00, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 10, 10, 10, 10, 10, 10, 10, 00, 00, 00, 21, 21, 21, 21, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 09, 00, 00, 21, 00, 00, 09, 00, 00, 00, 09, 21, 00, 00, 00, 11, 00, 00, 10, 00, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 00, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 23, 00, 10, 10, 00, 23, 00, 00, 23, 00, 00, 00, 00, 00, 23, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 00, 10, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 09, 00, 00, 09, 00, 00, 00, 00, 00, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 11, 00, 10, 00, 10, 00, 10, 00, 10, 00, 00, 00, 20, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 10, 10, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 23, 00, 00, 00, 00, 10, 10, 10, 10, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 00, 10, 00, 09, 09, 00, 00, 00, 00, 00, 23, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 23, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 10, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 10, 10, 10, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 10, 10, 10, 10, 10, 00, 23, 00, 10, 10, 10, 10, 10, 00, 23, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 00, 10, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 10, 10, 00, 09, 00, 10, 10, 10, 10, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 10, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 10, 10, 10, 10, 00, 23, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 23, 00, 00, 00, 23, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 00, 00, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 00, 00, 00, 00, 09, 09, 00, 00, 00, 00, 00, 00, 00, 00, 09, 00, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 10, 00, 11, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 09,
            09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09,
            09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 00, 00, 00, 00, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09, 09]
    ]
var mouX;
var mouY;
var clicked = false
var mapX = 0;
var mapY = 0;
var sumscore = 0;
var levelscore = 0;
var tempscore = 0;
var storehealth = 3;

//PLAYER CLASS
class Player {
    constructor() {
        this.position = {
            x: 64,
            y: 500
        }
        this.velocity = {
            x: 0,
            y: 1
        }
        this.width = 54
        this.height = 69
        this.score = 0
        this.kill = 0
        this.health = storehealth
    }

    draw() {
        //context.fillStyle = "red"
        //context.fillRect(this.position.x, this.position.y, this.width, this.height)
        context.drawImage(playerimage, this.position.x, this.position.y)
    }

    update() {
        this.draw()
        this.position.x += this.velocity.x
        this.position.y += this.velocity.y

        if (this.position.y + this.height + this.velocity.y <= canvas.height) {
            this.velocity.y += gravity
        }
    }
}

//PLATFORM CLASS
class Platform {
    constructor({ x, y, type }) {
        this.position = {
            x,
            y
        }
        this.velocity = {
            x: 0,
        }
        this.width = 64
        this.height = 64
        this.type = type
    }
    draw() {
        if (this.type === 1) {
            context.drawImage(dirt, this.position.x, this.position.y);
            //context.fillStyle = 'blue'
        } else if (this.type === 2) {
            context.drawImage(brick, this.position.x, this.position.y);
            //context.fillStyle = 'purple'
        } else if (this.type === 3) {
            context.drawImage(grasstop, this.position.x, this.position.y);
        } else if (this.type === 4) {
            context.drawImage(sand, this.position.x, this.position.y);
        } else if (this.type === 5) {
            context.drawImage(sandtop, this.position.x, this.position.y);
        } else if (this.type === 6) {
            context.drawImage(sandbrick, this.position.x, this.position.y);
        } else if (this.type === 7) {
            context.drawImage(dirt2, this.position.x, this.position.y);
        } else if (this.type === 8) {
            context.drawImage(grasstop2, this.position.x, this.position.y);
        } else if (this.type === 9) {
            context.drawImage(brick2, this.position.x, this.position.y);
        }
        //context.fillRect(this.position.x, this.position.y, this.width, this.height)
    }
    update() {
        this.draw()
        this.position.x += this.velocity.x
    }
}

class MenuElement {
    constructor({ x, y, width, height, type }) {
        this.position = {
            x,
            y
        }
        this.width = width
        this.height = height
        this.type = type
    }
    draw() {
        if (this.type === 30) {
            context.drawImage(playbutton, this.position.x, this.position.y);
            this.width = 256
            this.height = 128
        }
        if (this.type === 31) {
            context.drawImage(forestbutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 32) {
            context.drawImage(junglebutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 33) {
            context.drawImage(desertbutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 34) {
            context.drawImage(graveyardbutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 35) {
            context.drawImage(spaceshipbutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 36) {
            context.drawImage(spacebutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 37) {
            context.drawImage(alllevelbutton, this.position.x, this.position.y);
            this.width = 192
            this.height = 144
        }
        if (this.type === 38) {
            context.drawImage(backbutton, this.position.x, this.position.y);
            this.width = 64
            this.height = 64
        }
        if (this.type === 39) {
            context.drawImage(backbutton, this.position.x, this.position.y, 32, 32);
            this.width = 32
            this.height = 32
        }
    }
}

//COIN CLASS
class Coin {
    constructor({ x, y, type, value }) {
        this.position = {
            x,
            y
        }
        this.velocity = {
            x: 0,
        }
        this.width = 32
        this.height = 32
        this.type = type
        this.value = value
    }

    draw() {
        if (this.type === 10) {
            //context.fillStyle = 'gold'
            context.drawImage(dogecoin, this.position.x, this.position.y)
            this.value = 1
        } else if (this.type === 11) {
            //context.fillStyle = 'green'
            context.drawImage(shibacoin, this.position.x, this.position.y)
            this.value = 5
        } else if (this.type === 12) {
            context.drawImage(gpupowerup, this.position.x, this.position.y)
            this.value = 10
        }
        //context.fillRect(this.position.x, this.position.y, this.width, this.height)
    }
    update() {
        this.draw()
        this.position.x += this.velocity.x
    }
}

class Enemy {
    constructor({ x, y, type, damage, distance }) {
        this.position = {
            x,
            y
        }
        this.velocity = {
            x: 0,
        }
        this.width = 64
        this.height = 64
        this.type = type
        this.damage = damage
        this.direction = true
        this.movement = 0
        this.distance = distance
    }
    draw() {
        if (this.type === 20) {
            context.drawImage(vizslainu, this.position.x, this.position.y);
            this.damage = 1
            this.distance = 128
            //context.fillStyle = 'blue'
        }
        if (this.type === 21) {
            context.drawImage(trap, this.position.x, this.position.y);
            this.damage = 1
            this.distance = 0
            this.width = 64
            this.height = 64
        }
        if (this.type === 22) {
            context.drawImage(vizslafarao, this.position.x, this.position.y);
            this.damage = 1
            this.distance = 256
        }
        if (this.type === 23) {
            context.drawImage(vizslaghost, this.position.x, this.position.y);
            this.damage = 1
            this.distance = 320
        }
        if (this.type === 24) {
            context.drawImage(cactus, this.position.x, this.position.y);
            this.width = 64
            this.height = 128
            this.damage = 1
            this.distance = 0
        }
    }
    update() {
        this.draw()
        this.position.x += this.velocity.x
    }
}

function createImage(imageSrc) {
    const image = new Image()
    image.src = imageSrc
    return image
}

let player = new Player()

let platforms = []
let coins = []
let enemies = []
let menuelements = []

//drawMap()
const keys = {
    right: {
        pressed: false
    },
    left: {
        pressed: false
    }
}

let scrollOffset = 0

resetGame()
animate()
setTimeout(countdown, 1000);

function resetGame() {
    if (level == 7) {
        gravity = 0.25
    } else {
        gravity = 0.5
    }
    soundtrack.pause();
    spacebg.src = backgroundSrc[level]
    console.log('kezdodik')
    player = new Player()
    tiles = world[level]

    platforms = []
    coins = []
    enemies = []
    menuelements = []
    drawMap()
    time = 200
    attackResistance = 0
    attackable = true;

    console.log(platforms)
    scrollOffset = 0
    soundtrack = new Audio(audioSrc[level])
    soundtrack.play();
    soundtrack.loop = true;
    if (level > 1) {
        menuelements.push(new MenuElement({ x: 16, y: 88, width: menuelements.width, height: menuelements.height, type: 39, }));
    }
}

//mozgás
function animate() {
    requestAnimationFrame(animate)
    //context.fillStyle = 'aqua'
    //context.fillRect(0, 0, canvas.width, canvas.height)
    context.drawImage(spacebg, 0, 0)

    menuelements.forEach((menuelement, i) => {
        menuelement.draw()
    })
    if (level > 1) {
        platforms.forEach((platform) => {
            platform.update()
            platform.velocity.x = 0
        })
        coins.forEach((coin, i) => {
            /*if(collisionObject({object1: player, object2: coin})){
                setTimeout(() => {
                    //if(coin.type == 12){
                    //    playerimage.src = 'sprite/dogeplayer.png'
                    //    player.health += 3
                    //}
                    player.score += coin.value
                    console.log(coins[i])
                    coins.splice(i, 1)
                },0)    
            }*/
            coin.update()
            //coin.velocity.x = 0
        })
        enemies.forEach((enemy) => {
            //console.log(enemy.movement)
            if (enemy.direction) {
                enemy.movement += 1
                enemy.position.x -= 1
                enemy.update()
                if (enemy.movement >= enemy.distance) {
                    enemy.direction = false
                }
            }
            if (!enemy.direction) {
                enemy.movement -= 1
                enemy.position.x += 1
                enemy.update()
                if (enemy.movement <= 0) {
                    enemy.direction = true
                }
            }
            /*if(collisionObject({object1:player, object2: enemy})){
                losehealth()
            }else{
            }*/
        })
        if (level > 1) {
            player.update()
        }

        let hitSide = false
        if (keys.right.pressed && player.position.x < 600) {
            playerimage = playerimageR
            player.velocity.x = 5
        } else if ((keys.left.pressed && player.position.x > 300) ||
            keys.left.pressed && scrollOffset === 0 && player.position.x > 0) {
            playerimage = playerimageL
            player.velocity.x = -5
        } else {
            player.velocity.x = 0

            //player követése
            if (keys.right.pressed) {
                playerimage = playerimageR
                for (let i = 0; i < platforms.length; i++) {
                    const platform = platforms[i]
                    platform.velocity.x = -5
                    if (collSides({ object1: player, object2: platform })) {
                        platforms.forEach(platform => {
                            platform.velocity.x = 0
                        })
                        hitSide = true
                        break
                    }
                }
                if (!hitSide) {
                    scrollOffset += 5

                    coins.forEach((coin) => {
                        coin.position.x -= 5
                    })
                    enemies.forEach((enemy) => {
                        enemy.position.x -= 5
                    })
                }
            } else if (keys.left.pressed && scrollOffset > 0) {
                playerimage = playerimageL
                for (let i = 0; i < platforms.length; i++) {
                    const platform = platforms[i]
                    platform.velocity.x = 5
                    if (collSides({ object1: player, object2: platform })) {
                        platforms.forEach((platform) => {
                            platform.velocity.x = 0
                        })
                        hitSide = true
                        break
                    }
                }
                if (!hitSide) {
                    scrollOffset -= 5
                    coins.forEach((coin) => {
                        coin.position.x += 5
                    })
                    enemies.forEach((enemy) => {
                        enemy.position.x += 5
                    })
                }
            }
        }
        collisionwithCoins()
        collisionwithEnemies()

        levelscore = player.score + player.kill * 10
        sumscore = tempscore + levelscore
        drawUI()

        //két támadás között eltelt idő
        if (attackResistance % 4 == 0) {
            attackable = true
        }

        //collisionwithEnemies()

        enemies.forEach((enemy, i) => {
            if (collTop({ object1: player, object2: enemy })) {
                player.velocity.x = 0
                if (enemy.type == 20 || enemy.type == 22) {
                    player.kill += 1
                    killenemyaudio = new Audio('audio/killenemy.mp3')
                    killenemyaudio.play()
                    enemies.splice(i, 1)
                }
            }
        })

        //document.getElementById("score").innerHTML = "Pálya: " + levelname[level] + " |" + " Pénz: " + player.score + " |" + " Gyilkolás: " + player.kill + " |" + " Élet: " + player.health + " |" + " Idő: " + time + " |" + " Összpont: " + sumscore;

        //érintkezés platformmal (COLLISION)
        platforms.forEach((platform) => {
            if (collBottom({ object1: player, object2: platform })) {
                player.velocity.y = -1//-player.velocity.y
            }
            if (collSides({ object1: player, object2: platform })) {
                player.velocity.x = 0;
            }
        })

        platforms.forEach((platform) => {
            if (player.position.y + player.height <= platform.position.y &&
                player.position.y + player.height + player.velocity.y >= platform.position.y &&
                player.position.x + player.width >= platform.position.x &&
                player.position.x <= platform.position.x + platform.width) {
                player.velocity.y = 0
                canJump = true
            }
        })
        //pálya vége
        if (scrollOffset > (tiles.length / 12 * 64) - 856) { //(adott palya hossza) - 600 (scroll miatt)- 4x64 (4 block)
            //alert("pálya teljesítve")
            console.log("you win")

            //RANKED
            if (alllevelmode == true) {
                sumscore += /*player.score + player.kill * 10 */ player.health * 10 + time
                tempscore = sumscore
                storehealth = player.health
                level += 1
            }

            //NEM RANKED
            if (alllevelmode == false) {
                level = 1
                tempscore = 0
                sumscore = 0
                storehealth = 3
                playerimageL.src = 'sprite/dogeplayerweakL.png'
                playerimageR.src = 'sprite/dogeplayerweakR.png'
            }
            gravity = 0.5
            //console.log(level)
            if (level == 7) {
                gravity = 0.25
            }
            if (level == world.length) {
                Send_Data();
                level = 1
                tempscore = 0
                sumscore = 0
                storehealth = 3
                playerimageL.src = 'sprite/dogeplayerweakL.png'
                playerimageR.src = 'sprite/dogeplayerweakR.png'
            }
            resetGame()
            //soundtrack.pause()
        }
        //halál
        if (player.position.y > canvas.height || player.health <= 0 || time == 0) {
            playerimageL.src = 'sprite/dogeplayerweakL.png'
            playerimageR.src = 'sprite/dogeplayerweakR.png'
            storehealth = 3
            if (player.position.y > canvas.height) {
                dogefallingaudio = new Audio('audio/dogefalling.mp3')
                dogefallingaudio.play();
            }
            //soundtrack.pause()
            if (alllevelmode == true) {
            Send_Data()
            level = 1;
            }    
            resetGame()
            //document.location.reload();
        }
    }
    mouseCollision()

}

//pálya generálás tömbböl
function drawMap() {
    mapY = 0
    //platforms = []
    //coins = []
    //enemies = []
    for (let i = 0; i < tiles.length; i++) {
        if (tiles[i] > 0 && tiles[i] < 10) {
            platforms.push(new Platform({ x: mapX, y: mapY, type: tiles[i] }))
            //coins.push(new Coin({x:mapX, y:mapY, type:tiles[i]}));
            mapX += 64;
            if (mapX >= tiles.length / 12 * 64) {
                mapX = 0;
                mapY += 64;
            }
        } else if (tiles[i] >= 10 && tiles[i] < 20) {
            coins.push(new Coin({ x: mapX, y: mapY, type: tiles[i], value: coins.value }));
            mapX += 64;
            if (mapX >= tiles.length / 12 * 64) {
                mapX = 0;
                mapY += 64;
            }
        } else if (tiles[i] >= 20 && tiles[i] < 30) {
            enemies.push(new Enemy({ x: mapX, y: mapY, type: tiles[i], damage: enemies.damage }));
            mapX += 64;
            if (mapX >= tiles.length / 12 * 64) {
                mapX = 0;
                mapY += 64;
            }
        } else if (tiles[i] >= 30 && tiles[i] < 40) {
            menuelements.push(new MenuElement({ x: mapX, y: mapY, width: menuelements.width, height: menuelements.height, type: tiles[i], }));
            mapX += 64;
            if (mapX >= tiles.length / 12 * 64) {
                mapX = 0;
                mapY += 64;
            }
        } else {
            mapX += 64;
            if (mapX >= tiles.length / 12 * 64) {
                mapX = 0;
                mapY += 64;
            }
        }
    }
}

//Collision
function mouseCollision() {
    menuelements.forEach((menuelement) => {
        if (mouX > menuelement.position.x &&
            mouX < menuelement.position.x + menuelement.width &&
            mouY > menuelement.position.y &&
            mouY < menuelement.position.y + menuelement.height) {
            if (menuelement.type == 30) {
                playbutton.src = 'sprite/playbuttonpressed.png'
                if (clicked == true) {
                    level = 1;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 31) {
                forestbutton.src = 'sprite/forestbuttonpressed.png'
                if (clicked == true) {
                    level = 2;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 32) {
                junglebutton.src = 'sprite/junglebuttonpressed.png'
                if (clicked == true) {
                    level = 3;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 33) {
                desertbutton.src = 'sprite/desertbuttonpressed.png'
                if (clicked == true) {
                    level = 4;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 34) {
                graveyardbutton.src = 'sprite/graveyardbuttonpressed.png'
                if (clicked == true) {
                    level = 5;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 35) {
                spaceshipbutton.src = 'sprite/spaceshipbuttonpressed.png'
                if (clicked == true) {
                    level = 6;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 36) {
                spacebutton.src = 'sprite/spacebuttonpressed.png'
                if (clicked == true) {
                    level = 7;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = false
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 37) {
                alllevelbutton.src = 'sprite/alllevelpressed.png'
                if (clicked == true) {
                    level = 2;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = true
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 38) {
                backbutton.src = 'sprite/backbuttonpressed.png'
                if (clicked == true) {
                    level = 0;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = true
                    clicked = false
                    resetGame()
                }
            }
            if (menuelement.type == 39) {
                backbutton.src = 'sprite/backbuttonpressed.png'
                if (clicked == true) {
                    level = 1;
                    shibacoinaudio = new Audio('audio/shibacoin.mp3')
                    shibacoinaudio.play();
                    alllevelmode = true
                    clicked = false
                    resetGame()
                }
            }
            return true;
        } else {
            if (menuelement.type == 30) {
                playbutton.src = 'sprite/playbutton.png'
            }
            if (menuelement.type == 31) {
                forestbutton.src = 'sprite/forestbutton.png'
            }
            if (menuelement.type == 32) {
                junglebutton.src = 'sprite/junglebutton.png'
            }
            if (menuelement.type == 33) {
                desertbutton.src = 'sprite/desertbutton.png'
            }
            if (menuelement.type == 34) {
                graveyardbutton.src = 'sprite/graveyardbutton.png'
            }
            if (menuelement.type == 35) {
                spaceshipbutton.src = 'sprite/spaceshipbutton.png'
            }
            if (menuelement.type == 36) {
                spacebutton.src = 'sprite/spacebutton.png'
            }
            if (menuelement.type == 37) {
                alllevelbutton.src = 'sprite/alllevel.png'
            }
            if (menuelement.type == 38) {
                backbutton.src = 'sprite/backbutton.png'
            }
            if (menuelement.type == 39) {
                backbutton.src = 'sprite/backbutton.png'
            }
            /*
                junglebutton.src = 'sprite/junglebutton.png'
                desertbutton.src = 'sprite/desertbutton.png'
                graveyardbutton.src = 'sprite/graveyardbutton.png'
                spaceshipbutton.src = 'sprite/spaceshipbutton.png'
                spacebutton.src = 'sprite/spacebutton.png'
                alllevelbutton.src = 'sprite/alllevel.png'*/
            // console.log('mousenemerint')
            return false;
        }
    })
}

function collision(object1, object2) {
    if (object1.x < object2.x + object2.width &&
        object1.x + object1.width > object2.x &&
        object1.y < object2.y + object2.height &&
        object1.height + object1.y > object2.y) {
        //console.log("Siker")
        return true;
    } else {
        return false;
    }
}
function collision2(object1, object2) {
    if (object1.position.x < object2.position.x + object2.width &&
        object1.position.x + object1.position.width > object2.position.x &&
        object1.position.y < object2.position.y + object2.height &&
        object1.height + object1.position.y > object2.position.y) {
        //console.log("Siker")
        return true;
    } else {
        return false;
    }
}
/*function collision3(object1, object2) {
    if (object1.position.x < object2.position.x + object2.width &&
        object1.position.x + object1.position.width > object2.position.x &&
        object1.position.y < object2.position.y + object2.height &&
        object1.height + object1.position.y > object2.position.y) {
        //console.log("Siker")
        return true;
    } else {
        return false;
    }
}*/

function collBottom({ object1, object2 }) {
    return object1.position.y <= object2.position.y + object2.height &&
        object1.position.y - object1.velocity.y >= object2.position.y + object2.height &&
        object1.position.x + object1.width >= object2.position.x &&
        object1.position.x <= object2.position.x + object2.width
}

function collSides({ object1, object2 }) {
    return object1.position.x + object1.width + object1.velocity.x - object2.velocity.x >= object2.position.x &&
        object1.position.x + object1.velocity.x <= object2.position.x + object2.width &&
        object1.position.y <= object2.position.y + object2.height &&
        object1.position.y + object1.height >= object2.position.y
}

function collTop({ object1, object2 }) {
    return object1.position.y + object1.height <= object2.position.y &&
        object1.position.y + object1.height + object1.velocity.y >= object2.position.y &&
        object1.position.x + object1.width >= object2.position.x &&
        object1.position.x <= object2.position.x + object2.width
}

function collisionObject({ object1, object2 }) {
    return (
        object1.position.x + object1.width >= object2.position.x &&
        object1.position.x <= object1.position.x + object2.width &&
        object1.position.y + object1.height >= object2.position.y &&
        object1.position.y <= object2.position.y + object2.height
    )
}

function collisionwithEnemies() {
    //COLLISION
    //Horizontal Collision
    let hcoll = {
        x: player.position.x + player.velocity.x,
        y: player.position.y,
        width: player.width,
        height: player.height
    }
    //Vertical Collision
    let vcoll = {
        x: player.position.x,
        y: player.position.y + player.velocity.y,
        width: player.width,
        height: player.height
    }
    //Collision
    for (let i = 0; i < enemies.length; i++) {
        let enemycoll = {
            x: enemies[i].position.x,
            y: enemies[i].position.y,
            width: enemies[i].width,
            height: enemies[i].height
        }

        //ha támadható a játékos és éritkezik egy ellenféllel, akkor levonja az életünkből az ellenfél támadásának értékét
        if (attackable) {
            if (collision(hcoll, enemycoll)) {
                player.health -= enemies[i].damage
                if(player.health <= 3){
                playerimageL.src = 'sprite/dogeplayerweakL.png'
                playerimageR.src = 'sprite/dogeplayerweakR.png'
                }
                hurtaudio = new Audio('audio/dogehurtbark.mp3')
                hurtaudio.play()
                attackResistance = 1
                attackable = false // mivel két támadás között el kell telnie egy kis időnek, addig nem támadhatnak minket
            }
        }
    }
}
//})


function collisionwithCoins() {
    //COLLISION
    //Horizontal Collision
    let hcoll = {
        x: player.position.x + player.velocity.x,
        y: player.position.y,
        width: player.width,
        height: player.height
    }
    //Vertical Collision
    let vcoll = {
        x: player.position.x,
        y: player.position.y + player.velocity.y,
        width: player.width,
        height: player.height
    }
    //Collision
    for (let i = 0; i < coins.length; i++) {
        let coincoll = {
            x: coins[i].position.x,
            y: coins[i].position.y,
            width: coins[i].width,
            height: coins[i].height
        }
        if (collision(hcoll, coincoll) || collision(vcoll, coincoll)) {
            if (coins[i].type == 12) {
                if (player.health < 5) {
                    player.health += 1
                }
                if(player.health > 3){
                playerimageR.src = "sprite/dogeplayerstrongR.png"
                playerimageL.src = "sprite/dogeplayerstrongL.png"
                }
                gpupowerupaudio = new Audio('audio/gpupowerup.mp3')
                gpupowerupaudio.play();
            }
            if (coins[i].type == 11) {
                shibacoinaudio = new Audio('audio/shibacoin.mp3')
                shibacoinaudio.play();
            }
            if (coins[i].type == 10) {
                dogecoinaudio = new Audio('audio/dogecoin.mp3')
                dogecoinaudio.play();
            }
            player.score += coins[i].value
            coins.splice(i, 1)
        }
    }
}
//visszaszámlálás/idő/mp-ben    
function countdown() {
    time--
    attackResistance++ //számolja az ellenfelek támadásai között eltelt időt
    if (time > -1) {
        setTimeout(countdown, 1000);
    }
}
function drawUI() {
    context.font = "16px Georgia";
    for (let i = 0; i < player.health; i++) {
        context.drawImage(hearth, 16 + 16 * i + 1, 16, 16, 16)
    }
    //context.drawImage(hearth, 16, 16, 16, 16)
    context.drawImage(dogecoin, 16, 40, 16, 16)
    context.drawImage(vizslainu, 16, 64, 16, 16)
    //context.fillText(player.health, 40, 26)
    context.drawImage(timer, 1140, 16, 16, 16)
    context.fillText(time, 1160, 26)
    context.drawImage(allscore, 1140, 40, 16, 16)
    context.fillText(sumscore, 1160, 50)
    context.fillText(player.score, 40, 50)
    context.fillText(player.kill, 40, 74)
    context.fillStyle = "red"
}
/*function loadMap(){
    $.getJSON('world.json', function (data){
        world = data.levels
    })
}*/
function mouseclick() {
    clicked = true
    console.log(window.screen.height + " " + window.screen.width)
}
function mousepos(e) {
    clicked = false
    var rect = canvas.getBoundingClientRect()
    mouX = e.clientX - rect.left
    mouY = e.clientY - rect.top
    soundtrack.play();
    soundtrack.loop = true;
}

function Send_Data() {
    /*var name=document.getElementById("name").value;
    var score=document.getElementById("score").value;
    var httpr=new XMLHttpRequest();
    httpr.open("POST", "./get_data.php", true);
    httpr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
    httpr.onreadystatechange=function(){
        if(httpr.readyState==4 && httpr.status==200){
           document.getElementById("response").innerHTML=httpr.responseText; 
        }        
    }
    httpr.send("name="+name+"&score="+score);*/

    /*$.ajax({
        url: 'get_data.php?score='+ sumscore,
        type: 'GET',
        async: true,
    })*/
    alert("Meghaltál! :( Elért pontszámod: " + sumscore);
    var point = sumscore;
    var httpr = new XMLHttpRequest();
    httpr.open("POST", "./get_data.php", true);
    httpr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    httpr.send("score=" + point);
}
/*resetGame()
animate()
setTimeout(countdown, 1000);*/

//billentzű eventek

canvas.addEventListener('mousemove', mousepos, true)

canvas.addEventListener('click', mouseclick, true)

window.addEventListener('keydown', ({ keyCode }) => {
    switch (keyCode) {
        //bal
        case 65:
            keys.left.pressed = true
            soundtrack.play();
            soundtrack.loop = true;
            break
        case 37:
            keys.left.pressed = true
            soundtrack.play();
            soundtrack.loop = true;
            break

        //le
        case 83:
            break

        //jobb    
        case 68:
            keys.right.pressed = true
            soundtrack.play();
            soundtrack.loop = true;
            break
        case 39:
            keys.right.pressed = true
            soundtrack.play();
            soundtrack.loop = true;
            break

        //fel    
        case 87:
            if (canJump) {
                player.velocity.y -= 15
                jumpaudio = new Audio('audio/dogejumpbark.mp3')
                jumpaudio.play()
                canJump = false
            }
            soundtrack.play();
            soundtrack.loop = true;
            break
        case 32:
            if (canJump) {
                player.velocity.y -= 15
                jumpaudio = new Audio('audio/dogejumpbark.mp3')
                jumpaudio.play()
                canJump = false
            }
            soundtrack.play();
            soundtrack.loop = true;
            break
        case 38:
            if (canJump) {
                player.velocity.y -= 15
                jumpaudio = new Audio('audio/dogejumpbark.mp3')
                jumpaudio.play()
                canJump = false
            }
            soundtrack.play();
            soundtrack.loop = true;
            break
    }
})
window.addEventListener('keyup', ({ keyCode }) => {
    switch (keyCode) {
        //bal
        case 65:
            keys.left.pressed = false
            break
        case 37:
            keys.left.pressed = false
            break

        //le
        case 83:
            break

        //jobb    
        case 68:
            keys.right.pressed = false
            break
        case 39:
            keys.right.pressed = false
            break

        //fel    
        case 87:
            break
        case 32:
            break
        case 38:
            break
    }
})

